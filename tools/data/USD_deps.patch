diff --git a/build_scripts/build_usd.py b/build_scripts/build_usd.py
index 7c27a2aa3..917d01621 100644
--- a/build_scripts/build_usd.py
+++ b/build_scripts/build_usd.py
@@ -689,7 +689,7 @@ if MacOS():
     BOOST_VERSION_FILE = "include/boost/version.hpp"
 elif Linux():
     if Python3():
-        BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.70.0/source/boost_1_70_0.tar.gz"
+        BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz"
     else:
         BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.66.0/source/boost_1_66_0.tar.gz"
     BOOST_VERSION_FILE = "include/boost/version.hpp"
@@ -701,8 +701,8 @@ elif Windows():
     #
     # boost 1.70 is required for Visual Studio 2019. For simplicity, we use
     # this version for all older Visual Studio versions as well.
-    BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.70.0/source/boost_1_70_0.tar.gz"
-    BOOST_VERSION_FILE = "include/boost-1_70/boost/version.hpp"
+    BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz"
+    BOOST_VERSION_FILE = "include/boost-1_78/boost/version.hpp"
 
 def InstallBoost_Helper(context, force, buildArgs):
     # Documentation files in the boost archive can have exceptionally
@@ -858,7 +858,7 @@ BOOST = Dependency("boost", InstallBoost, BOOST_VERSION_FILE)
 # Intel TBB
 
 if Windows():
-    TBB_URL = "https://github.com/oneapi-src/oneTBB/releases/download/2018_U6/tbb2018_20180822oss_win.zip"
+    TBB_URL = "https://github.com/oneapi-src/oneTBB/releases/download/v2020.3/tbb-2020.3-win.zip"
 elif MacOS():
     # On MacOS we experience various crashes in tests during teardown
     # starting with 2018 Update 2. Until we figure that out, we use
@@ -874,8 +874,8 @@ def InstallTBB(context, force, buildArgs):
         InstallTBB_LinuxOrMacOS(context, force, buildArgs)
 
 def InstallTBB_Windows(context, force, buildArgs):
-    TBB_ROOT_DIR_NAME = "tbb2018_20180822oss"
-    with CurrentWorkingDirectory(DownloadURL(TBB_URL, context, force, 
+    TBB_ROOT_DIR_NAME = "tbb"
+    with CurrentWorkingDirectory(DownloadURL(TBB_URL, context, force,
         TBB_ROOT_DIR_NAME)):
         # On Windows, we simply copy headers and pre-built DLLs to
         # the appropriate location.
@@ -1072,7 +1072,7 @@ BLOSC = Dependency("Blosc", InstallBLOSC, "include/blosc.h")
 # not require additional dependencies such as GLFW. Note that version
 # 6.1.0 does require CMake 3.3 though.
 
-OPENVDB_URL = "https://github.com/AcademySoftwareFoundation/openvdb/archive/v6.1.0.zip"
+OPENVDB_URL = "https://github.com/AcademySoftwareFoundation/openvdb/archive/v9.0.0.zip"
 
 def InstallOpenVDB(context, force, buildArgs):
     with CurrentWorkingDirectory(DownloadURL(OPENVDB_URL, context, force)):
@@ -1196,7 +1196,7 @@ OPENCOLORIO = Dependency("OpenColorIO", InstallOpenColorIO,
 ############################################################
 # OpenSubdiv
 
-OPENSUBDIV_URL = "https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_4_3.zip"
+OPENSUBDIV_URL = "https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_4_4.zip"
 
 def InstallOpenSubdiv(context, force, buildArgs):
     with CurrentWorkingDirectory(DownloadURL(OPENSUBDIV_URL, context, force)):

     
diff --git a/pxr/imaging/hioOpenVDB/vdbTextureData.h b/pxr/imaging/hioOpenVDB/vdbTextureData.h
index e96a56d3f..c657f7232 100644
--- a/pxr/imaging/hioOpenVDB/vdbTextureData.h
+++ b/pxr/imaging/hioOpenVDB/vdbTextureData.h
@@ -34,6 +34,10 @@

 #include <memory>

+#ifndef M_PI_2
+    #define M_PI_2  1.57079632679489661923 // pi/2
+#endif
+
 PXR_NAMESPACE_OPEN_SCOPE

 class HioOpenVDB_TextureData_DenseGridHolderBase;
